# Generated by Django 3.2.25 on 2025-03-05 19:42

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('TaskManagementApp', '0010_userprofile_email'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='blumapstable',
            options={'verbose_name': 'Blumaps Entry', 'verbose_name_plural': 'Blumaps Entries'},
        ),
        migrations.AlterModelOptions(
            name='locationinterest',
            options={'verbose_name': 'Location Interest', 'verbose_name_plural': 'Location Interests'},
        ),
        migrations.AlterModelOptions(
            name='locations',
            options={'verbose_name': 'Location', 'verbose_name_plural': 'Locations'},
        ),
        migrations.AlterModelOptions(
            name='taskdb',
            options={'verbose_name': 'Task', 'verbose_name_plural': 'Tasks'},
        ),
        migrations.AlterModelOptions(
            name='userprofile',
            options={'verbose_name': 'User Profile', 'verbose_name_plural': 'User Profiles'},
        ),
        migrations.RenameField(
            model_name='locations',
            old_name='Attachments',
            new_name='attachments',
        ),
        migrations.RenameField(
            model_name='locations',
            old_name='Category',
            new_name='category',
        ),
        migrations.RenameField(
            model_name='locations',
            old_name='Created_By',
            new_name='created_by',
        ),
        migrations.RenameField(
            model_name='locations',
            old_name='Date_Created',
            new_name='date_created',
        ),
        migrations.RenameField(
            model_name='locations',
            old_name='Date_Updated',
            new_name='date_updated',
        ),
        migrations.RenameField(
            model_name='locations',
            old_name='Description',
            new_name='description',
        ),
        migrations.RenameField(
            model_name='locations',
            old_name='Email',
            new_name='email',
        ),
        migrations.RenameField(
            model_name='locations',
            old_name='GeoHash',
            new_name='geohash',
        ),
        migrations.RenameField(
            model_name='locations',
            old_name='Latitude',
            new_name='latitude',
        ),
        migrations.RenameField(
            model_name='locations',
            old_name='Longitude',
            new_name='longitude',
        ),
        migrations.RenameField(
            model_name='locations',
            old_name='Name',
            new_name='name',
        ),
        migrations.RenameField(
            model_name='locations',
            old_name='Phone_Number',
            new_name='phone_number',
        ),
        migrations.RenameField(
            model_name='locations',
            old_name='Priority',
            new_name='priority',
        ),
        migrations.RenameField(
            model_name='locations',
            old_name='Resolved_Date',
            new_name='resolved_date',
        ),
        migrations.RenameField(
            model_name='locations',
            old_name='Status',
            new_name='status',
        ),
        migrations.RenameField(
            model_name='locations',
            old_name='Tags',
            new_name='tags',
        ),
        migrations.RenameField(
            model_name='locations',
            old_name='Updated_By',
            new_name='updated_by',
        ),
        migrations.RenameField(
            model_name='userprofile',
            old_name='email',
            new_name='first_name',
        ),
        migrations.AddField(
            model_name='userprofile',
            name='authority',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='is_ngo',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='last_name',
            field=models.CharField(blank=True, max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='points',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='reg_code',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='stars',
            field=models.FloatField(default=0.0),
        ),
        migrations.AlterField(
            model_name='taskdb',
            name='priority',
            field=models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='medium', max_length=30),
        ),
        migrations.AlterField(
            model_name='taskdb',
            name='task',
            field=models.CharField(max_length=100),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Friend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friends1', to=settings.AUTH_USER_MODEL)),
                ('user2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friends2', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user1', 'user2')},
            },
        ),
    ]
